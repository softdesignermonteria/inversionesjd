<?php 
$page = $_REQUEST['page']; 
// get the requested page 
$limit = $_REQUEST['rows']; 
// get how many rows we want to have into the grid 
$sidx = $_REQUEST['sidx']; 
// get index row - i.e. user click to sort 
$sord = $_REQUEST['sord']; 
// get the direction if(!$sidx) 
//$sidx =1; 
if(!$sidx) $sidx =1;

$wh = "";
$searchOn = Strip($_REQUEST['_search']);
if($searchOn=='true') {
	$searchOper = $_REQUEST["searchOper"];
	$searchField = $_REQUEST["searchField"];
	$searchString = $_REQUEST["searchString"];
	
		switch ($searchOper) {
			case 'eq': $wh = " and $searchField = '$searchString' "; break;
		}
	
}

// connect to the database 
//$db = mysql_connect($dbhost, $dbuser, $dbpassword) or die("Connection Error: " . mysql_error()); 
//mysql_select_db($database) or die("Error conecting to db."); 

$condicion1 = '';
$condicion2 = '';
$condicion3 = '';
$condicion4 = '';
$condicion5 = '';
$condicion6 = '';


if( isset($_REQUEST["clientes_id"]) ){ if( $_REQUEST["clientes_id"]!= '' ){ $condicion1 .= " and c.id = '".$_REQUEST["clientes_id"]."' "; } }

if(isset($_REQUEST["nit"])){ if($_REQUEST["nit"]!=''){ $condicion2.=" and c.nit like '".$_REQUEST["nit"]."%'"; } }
if(isset($_REQUEST["nombre"])){ if($_REQUEST["nombre"]!=''){ 
				$condicion3.=" and ( concat_ws(' ',c.nombre1,c.nombre2,c.apellido1,c.apellido2) like '%".str_replace(" ","%",$_REQUEST["nombre"])."%' 
								   or concat_ws(' ',c.apellido1,c.apellido2,c.nombre1,c.nombre2) like '%".str_replace(" ","%",$_REQUEST["nombre"])."%' 
								   or c.razon_social like '%".str_replace(" ","%",$_REQUEST["nombre"])."%' 
								   ) "; } }

if( isset($_REQUEST["numero"]) ){ if( $_REQUEST["numero"]!= '' ){ $condicion4 .= " and nd.consecutivo = '".$_REQUEST["numero"]."' "; } }
if( isset($_REQUEST["desde"]) ){  if( $_REQUEST["desde"]!= '' ){  $condicion5 .= " and nd.fecha >= '".$_REQUEST["desde"]."' "; } }
if( isset($_REQUEST["hasta"]) ){  if( $_REQUEST["hasta"]!= '' ){  $condicion6 .= " and nd.fecha <= '".$_REQUEST["hasta"]."' "; } }
								   


$db = DbBase::rawConnect();

$sql = "select nd.*,(sum(IF(dnd.anulado=0,valor,0))) as tnd,c.nit,c.nombre1,c.nombre2,c.apellido1,c.apellido2
			from recibos_caja nd,detalle_recibos_caja dnd, clientes c
			where 1 = 1 
			and nd.id = dnd.recibos_caja_id
			and nd.clientes_id = c.id
			and nd.anulado = 0
		
			$condicion1
			$condicion2
			$condicion3
			$condicion4
			$condicion5
			$condicion6
			group by nd.id
			";

$result = $db->query("SELECT COUNT(*) AS count FROM ($sql) h where 1 = 1 ".$wr); 

$row = $db->fetchArray($result); 

$count = $row['count']; 

if( $count >0 ) { 
		$total_pages = ceil($count/$limit); 
	} else { 
		$total_pages = 0; 
} 

if ($page > $total_pages) $page=$total_pages; 
	$start = $limit*$page - $limit;  // do not put 	$limit*($page - 1) 
	
	if($start < 0 ){ $start=0; }
	
	$responce = new stdClass();
	$SQL = "SELECT * 
					FROM ($sql) h 
			where 1 = 1 ".$wh."
			ORDER BY $sidx $sord 
			LIMIT $start , $limit"; 
	$result = $db->query( $SQL ); 
	$responce->page = $page ;
	$responce->sql = $SQL; 
	$responce->total = $total_pages; 
	$responce->records = $count; 
	$i=0; 
	$total_r = 0;
	while( $row = $db->fetchArray($result) ) { 
	 	$responce->rows[$i]['id']=$row[id]; 
		$total_r += $row[tnd];
	 	$nombre_cliente = $row[nombre1]." ".$row[nombre2]." ".$row[apellido1]." ".$row[apellido2];
	 	$responce->rows[$i]['cell']=array($row[id],utf8_encode($row[nit]),$nombre_cliente,$row[fecha],$row[prefijo].$row[consecutivo],$row[tnd]); 	
	 					$i++; 
	} 
	
	 //$responce->userdata['amount'] = $amttot; 
	 //$responce->userdata['tax'] = $taxtot; 
	 $responce->userdata['total'] = $total_r; 
	 $responce->userdata['nombre_completo'] = 'Totales:';
	
	echo json_encode($responce);
		
		
function Strip($value)
{
	if(get_magic_quotes_gpc() != 0)
  	{
    	if(is_array($value))  
			if ( array_is_associative($value) )
			{
				foreach( $value as $k=>$v)
					$tmp_val[$k] = stripslashes($v);
				$value = $tmp_val; 
			}				
			else  
				for($j = 0; $j < sizeof($value); $j++)
        			$value[$j] = stripslashes($value[$j]);
		else
			$value = stripslashes($value);
	}
	return $value;
}

function array_is_associative ($array)
{
    if ( is_array($array) && ! empty($array) )
    {
        for ( $iterator = count($array) - 1; $iterator; $iterator-- )
        {
            if ( ! array_key_exists($iterator, $array) ) { return true; }
        }
        return ! array_key_exists(0, $array);
    }
    return false;
}

?>
